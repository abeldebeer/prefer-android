// build configuration
buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'io.freefair:android-gradle-plugins:2.2.2'
    }
}

// gradle configuration
ext.config = [
        groupName            : 'com.github.cookingfox',
        minSdkVersion        : 9,
        minSdkVersionFragment: 11,
        targetSdkVersion     : 23,
        compileSdkVersion    : 23,
        buildToolsVersion    : '23.0.3',
        sourceCompatibility  : JavaVersion.VERSION_1_7,
        targetCompatibility  : JavaVersion.VERSION_1_7,
        versionCode          : 14,
        versionName          : '0.2.7'
]

// dependencies
ext.deps = [
        android_appcompat  : 'com.android.support:appcompat-v7:23.4.0',
        android_design     : 'com.android.support:design:23.4.0',
        guava_preconditions: 'com.cookingfox:guava-preconditions:0.1.5',
        junit              : 'junit:junit:4.12',
        mockito            : 'org.mockito:mockito-core:2.1.0-RC.1',
        rxjava             : 'io.reactivex:rxjava:1.1.8'
]

// default configuration for all android modules (overridden per module)
subprojects {
    repositories {
        jcenter()
    }

    plugins.matching {
        // match android library and application plugins
        it.class.name.matches('com.android.build.gradle.LibraryPlugin') ||
                it.class.name.matches('com.android.build.gradle.AppPlugin')
    }.whenPluginAdded {
        group = config.groupName
        version = config.versionName

        android {
            compileSdkVersion config.compileSdkVersion
            buildToolsVersion config.buildToolsVersion

            defaultConfig {
                minSdkVersion config.minSdkVersion
                targetSdkVersion config.targetSdkVersion
                versionCode config.versionCode
                versionName config.versionName
            }
            compileOptions {
                sourceCompatibility config.sourceCompatibility
                targetCompatibility config.targetCompatibility
            }
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android.txt')
                }
            }
        }

        dependencies {
            testCompile deps.junit
        }
    }
}

// root clean task
task clean(type: Delete) {
    delete rootProject.buildDir
}
